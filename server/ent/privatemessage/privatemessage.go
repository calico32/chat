// Code generated by entc, DO NOT EDIT.

package privatemessage

import (
	"time"
)

const (
	// Label holds the string label denoting the privatemessage type in the database.
	Label = "private_message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeAuthor holds the string denoting the author edge name in mutations.
	EdgeAuthor = "author"
	// EdgeRecipient holds the string denoting the recipient edge name in mutations.
	EdgeRecipient = "recipient"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// Table holds the table name of the privatemessage in the database.
	Table = "private_messages"
	// AuthorTable is the table that holds the author relation/edge.
	AuthorTable = "private_messages"
	// AuthorInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AuthorInverseTable = "users"
	// AuthorColumn is the table column denoting the author relation/edge.
	AuthorColumn = "user_private_messages"
	// RecipientTable is the table that holds the recipient relation/edge.
	RecipientTable = "private_messages"
	// RecipientInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	RecipientInverseTable = "users"
	// RecipientColumn is the table column denoting the recipient relation/edge.
	RecipientColumn = "user_private_messages_received"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "private_messages"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "private_message_children"
	// ChildrenTable is the table that holds the children relation/edge.
	ChildrenTable = "private_messages"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "private_message_children"
)

// Columns holds all SQL columns for privatemessage fields.
var Columns = []string{
	FieldID,
	FieldContent,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "private_messages"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"private_message_children",
	"user_private_messages",
	"user_private_messages_received",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ContentValidator is a validator for the "content" field. It is called by the builders before save.
	ContentValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
