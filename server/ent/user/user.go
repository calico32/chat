// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldAvatarURL holds the string denoting the avatar_url field in the database.
	FieldAvatarURL = "avatar_url"
	// FieldSecretHash holds the string denoting the secret_hash field in the database.
	FieldSecretHash = "secret_hash"
	// EdgeMessages holds the string denoting the messages edge name in mutations.
	EdgeMessages = "messages"
	// EdgePrivateMessages holds the string denoting the private_messages edge name in mutations.
	EdgePrivateMessages = "private_messages"
	// EdgePrivateMessagesReceived holds the string denoting the private_messages_received edge name in mutations.
	EdgePrivateMessagesReceived = "private_messages_received"
	// Table holds the table name of the user in the database.
	Table = "users"
	// MessagesTable is the table that holds the messages relation/edge.
	MessagesTable = "messages"
	// MessagesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessagesInverseTable = "messages"
	// MessagesColumn is the table column denoting the messages relation/edge.
	MessagesColumn = "user_messages"
	// PrivateMessagesTable is the table that holds the private_messages relation/edge.
	PrivateMessagesTable = "private_messages"
	// PrivateMessagesInverseTable is the table name for the PrivateMessage entity.
	// It exists in this package in order to avoid circular dependency with the "privatemessage" package.
	PrivateMessagesInverseTable = "private_messages"
	// PrivateMessagesColumn is the table column denoting the private_messages relation/edge.
	PrivateMessagesColumn = "user_private_messages"
	// PrivateMessagesReceivedTable is the table that holds the private_messages_received relation/edge.
	PrivateMessagesReceivedTable = "private_messages"
	// PrivateMessagesReceivedInverseTable is the table name for the PrivateMessage entity.
	// It exists in this package in order to avoid circular dependency with the "privatemessage" package.
	PrivateMessagesReceivedInverseTable = "private_messages"
	// PrivateMessagesReceivedColumn is the table column denoting the private_messages_received relation/edge.
	PrivateMessagesReceivedColumn = "user_private_messages_received"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldAvatarURL,
	FieldSecretHash,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
